syntax = "proto3";



service MasterService {
  rpc createFile(CreateFileReq) returns (CreateFileRes);
  rpc deleteFile(DeleteFileReq) returns (Status);
  rpc getLease(LeaseGrantReq) returns (LeaseGrantRes);
}

service ChunkService {
  rpc addMutations(Mutations) returns (Status);
}

message CreateFileReq {
  string fileName = 1;
  int32 fileSize = 2;
}

message DeleteFileReq {
  string fileName = 1;
}

message CreateFileRes {
  bool isSuccessful = 1;
  repeated Chunk chunks = 2;
  Status resStatus = 3;
}

message ServerAddress{
  string hostName = 1;
  int32 akkaPort = 2;
  int32 dataPort = 3;
  int32 apiPort = 4;
}

message Lease {
  Chunk chunk = 1;
  int64 grantedAt = 2;
  int64 duration = 3;
  ServerAddress primary = 4;
  repeated ServerAddress replicas = 5;
}

message LeaseGrantReq{
  repeated Chunk chunks = 1;
}

message LeaseGrantRes {
  repeated Lease leases = 1;
  Status resStatus = 2;
}

message Chunk {
  int64 chunkHandle = 1;
  int32 chunkIndex = 2;
}

enum MutationType {
  Append = 0;
  Write = 1;
}
message Mutation {
  Chunk chunk = 1;
  int32 serial = 3;
  MutationType type = 4;
  string mutationId = 5;
  string primary = 6;
  repeated string replicas = 7;
  int32 offset = 8;
  string clientId = 9;
}
message Mutations {
  repeated Mutation mutations = 1;
}
message Status {
  string status = 1;
  int32 code = 2;
}